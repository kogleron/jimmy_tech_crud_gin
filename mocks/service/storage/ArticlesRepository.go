// Code generated by mockery v2.10.0. DO NOT EDIT.

package mocks

import (
	models "jimmy_tech_crud_gin/models"

	mock "github.com/stretchr/testify/mock"
)

// ArticlesRepository is an autogenerated mock type for the ArticlesRepository type
type ArticlesRepository struct {
	mock.Mock
}

// Create provides a mock function with given fields: article
func (_m *ArticlesRepository) Create(article *models.Article) *models.Article {
	ret := _m.Called(article)

	var r0 *models.Article
	if rf, ok := ret.Get(0).(func(*models.Article) *models.Article); ok {
		r0 = rf(article)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*models.Article)
		}
	}

	return r0
}

// Delete provides a mock function with given fields: article
func (_m *ArticlesRepository) Delete(article *models.Article) {
	_m.Called(article)
}

// FindByFilter provides a mock function with given fields: filter
func (_m *ArticlesRepository) FindByFilter(filter models.ArticlesFilter) ([]models.Article, error) {
	ret := _m.Called(filter)

	var r0 []models.Article
	if rf, ok := ret.Get(0).(func(models.ArticlesFilter) []models.Article); ok {
		r0 = rf(filter)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]models.Article)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(models.ArticlesFilter) error); ok {
		r1 = rf(filter)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// FindByID provides a mock function with given fields: id
func (_m *ArticlesRepository) FindByID(id int) (*models.Article, error) {
	ret := _m.Called(id)

	var r0 *models.Article
	if rf, ok := ret.Get(0).(func(int) *models.Article); ok {
		r0 = rf(id)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*models.Article)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(int) error); ok {
		r1 = rf(id)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// Update provides a mock function with given fields: article, data
func (_m *ArticlesRepository) Update(article *models.Article, data interface{}) *models.Article {
	ret := _m.Called(article, data)

	var r0 *models.Article
	if rf, ok := ret.Get(0).(func(*models.Article, interface{}) *models.Article); ok {
		r0 = rf(article, data)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*models.Article)
		}
	}

	return r0
}
