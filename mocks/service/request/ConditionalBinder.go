// Code generated by mockery v2.10.0. DO NOT EDIT.

package mocks

import (
	gin "github.com/gin-gonic/gin"
	mock "github.com/stretchr/testify/mock"
)

// ConditionalBinder is an autogenerated mock type for the ConditionalBinder type
type ConditionalBinder struct {
	mock.Mock
}

// Bind provides a mock function with given fields: ctx, obj
func (_m *ConditionalBinder) Bind(ctx *gin.Context, obj interface{}) error {
	ret := _m.Called(ctx, obj)

	var r0 error
	if rf, ok := ret.Get(0).(func(*gin.Context, interface{}) error); ok {
		r0 = rf(ctx, obj)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// Supports provides a mock function with given fields: ctx
func (_m *ConditionalBinder) Supports(ctx *gin.Context) bool {
	ret := _m.Called(ctx)

	var r0 bool
	if rf, ok := ret.Get(0).(func(*gin.Context) bool); ok {
		r0 = rf(ctx)
	} else {
		r0 = ret.Get(0).(bool)
	}

	return r0
}
